{
  "contractName": "ItemToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "mintItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getItem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getItemCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItemCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"mintItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/tomoki/axelmark_kadai/item-shop/contracts/ItemToken.sol\":\"ItemToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tomoki/axelmark_kadai/item-shop/contracts/ItemToken.sol\":{\"keccak256\":\"0xa970804e4c56db3b88a0beb80a79bf5c32bd0f9bf55b5e534ca8e4b26c665a96\",\"urls\":[\"bzz-raw://fe67c6f0bbcf3f2d38bf24be701b7e1fd03458c3bc3a91c2161debf05e4177a8\",\"dweb:/ipfs/QmZUHj16uxrtQrHysZoDFFXE5Yjp4hRHZvtjTM225eSZp5\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6cd80ccf035f3e77640b0447c06eb66f4e57658cf1d1dada3a7b48346ae4f549\",\"urls\":[\"bzz-raw://738ad925fdb37701cfea66d4ed4fca4074bf145d0b6b6c45cfd96b2845bff4df\",\"dweb:/ipfs/QmYuZLGiKTG4EDu67qcpotzSd4Nc5jAkYFjG2GsRF85KSR\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x34726f200d88943561936daf5297552636b58b57ecd3eca6494d678d93d03252\",\"urls\":[\"bzz-raw://dee47bb5e1ef4b3b8ffd3edd9d1d774249c546d4ae890c46605dd9eda73ff7eb\",\"dweb:/ipfs/QmRKJyJDbjbaf8LLnw1jcpZ47VbU2c9gYT2xZSp19m55aM\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xaf17cd6e2d9f484546d48a0e9e7e279e4e90436c16df7fc3b562e58594f268d7\",\"urls\":[\"bzz-raw://7559f5728423b275e0cbb3e787d2c79115ad09e146abfedf10fb50e507fbf1a5\",\"dweb:/ipfs/QmX4jFGeYtL3QSfoS1HNQpytnjKvq7fHszAjvn42AVGHSn\"]},\"/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb94a03de3c8602a90c917ec7537b962dcf2cce2f2bd5f266e6ad790b45c10b97\",\"urls\":[\"bzz-raw://9291ee41737c8e8f37e6cae30dc2bf7145a99985b29e02120d57190369273562\",\"dweb:/ipfs/QmeFJtn4SVTGRKRsh2cCxa2gisLvNbQf5KvgHeUaF1Pzbv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c80636c0360eb116100d1578063a22cb4651161008a578063c87b56dd11610064578063c87b56dd14610a19578063d96a094a14610acd578063e985e9c514610afb578063f2fde38b14610b8457610166565b8063a22cb46514610850578063b88d4fde146108ad578063bfb231d2146109bf57610166565b80636c0360eb1461063257806370a08231146106c2578063715018a6146107275780637749cf231461073e5780638da5cb5b1461076957806395d89b41146107c057610166565b806323b872dd1161012357806323b872dd146103a95780632f745c59146104245780633129e7731461049357806342842e0e146104ed5780634f6ccce7146105685780636352211e146105b757610166565b806301ffc9a71461016b57806306fdde03146101dd578063081812fc1461026d578063095ea7b3146102e857806317fb85941461034357806318160ddd1461037e575b600080fd5b34801561017757600080fd5b506101c36004803603602081101561018e57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610bd5565b604051808215151515815260200191505060405180910390f35b3480156101e957600080fd5b506101f2610c3d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610232578082015181840152602081019050610217565b50505050905090810190601f16801561025f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561027957600080fd5b506102a66004803603602081101561029057600080fd5b8101908080359060200190929190505050610cdf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f457600080fd5b506103416004803603604081101561030b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d7a565b005b34801561034f57600080fd5b5061037c6004803603602081101561036657600080fd5b8101908080359060200190929190505050610ebe565b005b34801561038a57600080fd5b50610393611011565b6040518082815260200191505060405180910390f35b3480156103b557600080fd5b50610422600480360360608110156103cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611022565b005b34801561043057600080fd5b5061047d6004803603604081101561044757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611098565b6040518082815260200191505060405180910390f35b34801561049f57600080fd5b506104cc600480360360208110156104b657600080fd5b81019080803590602001909291905050506110f3565b60405180838152602001821515151581526020019250505060405180910390f35b3480156104f957600080fd5b506105666004803603606081101561051057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d3565b005b34801561057457600080fd5b506105a16004803603602081101561058b57600080fd5b81019080803590602001909291905050506111f3565b6040518082815260200191505060405180910390f35b3480156105c357600080fd5b506105f0600480360360208110156105da57600080fd5b8101908080359060200190929190505050611216565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063e57600080fd5b5061064761124d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068757808201518184015260208101905061066c565b50505050905090810190601f1680156106b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106ce57600080fd5b50610711600480360360208110156106e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ef565b6040518082815260200191505060405180910390f35b34801561073357600080fd5b5061073c6113c4565b005b34801561074a57600080fd5b5061075361154c565b6040518082815260200191505060405180910390f35b34801561077557600080fd5b5061077e611559565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107cc57600080fd5b506107d5611582565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108155780820151818401526020810190506107fa565b50505050905090810190601f1680156108425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561085c57600080fd5b506108ab6004803603604081101561087357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611624565b005b3480156108b957600080fd5b506109bd600480360360808110156108d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561093757600080fd5b82018360208201111561094957600080fd5b8035906020019184600183028401116401000000008311171561096b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117dc565b005b3480156109cb57600080fd5b506109f8600480360360208110156109e257600080fd5b8101908080359060200190929190505050611854565b60405180838152602001821515151581526020019250505060405180910390f35b348015610a2557600080fd5b50610a5260048036036020811015610a3c57600080fd5b8101908080359060200190929190505050611892565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a92578082015181840152602081019050610a77565b50505050905090810190601f168015610abf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610af960048036036020811015610ae357600080fd5b8101908080359060200190929190505050611a94565b005b348015610b0757600080fd5b50610b6a60048036036040811015610b1e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b6f565b604051808215151515815260200191505060405180910390f35b348015610b9057600080fd5b50610bd360048036036020811015610ba757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c03565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd55780601f10610caa57610100808354040283529160200191610cd5565b820191906000526020600020905b815481529060010190602001808311610cb857829003601f168201915b5050505050905090565b6000610cea82611e10565b610d3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612f39602c913960400191505060405180910390fd5b6005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d8582611216565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612fbd6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610e2b611e2d565b73ffffffffffffffffffffffffffffffffffffffff161480610e5a5750610e5981610e54611e2d565b611b6f565b5b610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612e8c6038913960400191505060405180910390fd5b610eb98383611e35565b505050565b610ec6611e2d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f87576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600b60405180604001604052808381526020016000151581525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908315150217905550505060006001600b8054905003905061100d3382611eee565b5050565b600061101d60036120e2565b905090565b61103361102d611e2d565b826120f7565b611088576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fde6031913960400191505060405180910390fd5b6110938383836121eb565b505050565b60006110eb82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061242e90919063ffffffff16565b905092915050565b60008082600b805490508110801561110c575060008110155b61117e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c6964206974656d206964000000000000000000000000000000000081525060200191505060405180910390fd5b600b848154811061118b57fe5b906000526020600020906002020160000154600b85815481106111aa57fe5b906000526020600020906002020160010160009054906101000a900460ff169250925050915091565b6111ee838383604051806020016040528060008152506117dc565b505050565b60008061120a83600361244890919063ffffffff16565b50905080915050919050565b600061124682604051806060016040528060298152602001612eee6029913960036124779092919063ffffffff16565b9050919050565b6060600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112e55780601f106112ba576101008083540402835291602001916112e5565b820191906000526020600020905b8154815290600101906020018083116112c857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612ec4602a913960400191505060405180910390fd5b6113bd600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612496565b9050919050565b6113cc611e2d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461148d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600b80549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060088054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561161a5780601f106115ef5761010080835404028352916020019161161a565b820191906000526020600020905b8154815290600101906020018083116115fd57829003601f168201915b5050505050905090565b61162c611e2d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b80600660006116da611e2d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611787611e2d565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6117ed6117e7611e2d565b836120f7565b611842576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612fde6031913960400191505060405180910390fd5b61184e848484846124ab565b50505050565b600b818154811061186157fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900460ff16905082565b606061189d82611e10565b6118f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612f8e602f913960400191505060405180910390fd5b6060600960008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561199b5780601f106119705761010080835404028352916020019161199b565b820191906000526020600020905b81548152906001019060200180831161197e57829003601f168201915b505050505090506000815114156119c45760405180602001604052806000815250915050611a8f565b600a816040516020018083805460018160011615610100020316600290048015611a255780601f10611a03576101008083540402835291820191611a25565b820191906000526020600020905b815481529060010190602001808311611a11575b505082805190602001908083835b60208310611a565780518252602082019150602081019050602083039250611a33565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150505b919050565b80600b8181548110611aa257fe5b906000526020600020906002020160010160009054906101000a900460ff1615611b34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f736f6c64206f757400000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001600b8381548110611b4357fe5b906000526020600020906002020160010160006101000a81548160ff0219169083151502179055505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611c0b611e2d565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e166026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611e2682600361251d90919063ffffffff16565b9050919050565b600033905090565b816005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611ea883611216565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4552433732313a206d696e7420746f20746865207a65726f206164647265737381525060200191505060405180910390fd5b611f9a81611e10565b1561200d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b61201960008383612537565b61206a81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061253c90919063ffffffff16565b50612081818360036125569092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60006120f08260000161258b565b9050919050565b600061210282611e10565b612157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612e60602c913960400191505060405180910390fd5b600061216283611216565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806121d157508373ffffffffffffffffffffffffffffffffffffffff166121b984610cdf565b73ffffffffffffffffffffffffffffffffffffffff16145b806121e257506121e18185611b6f565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff1661220b82611216565b73ffffffffffffffffffffffffffffffffffffffff1614612277576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180612f656029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612e3c6024913960400191505060405180910390fd5b612308838383612537565b612313600082611e35565b61236481600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061259c90919063ffffffff16565b506123b681600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061253c90919063ffffffff16565b506123cd818360036125569092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061243d83600001836125b6565b60001c905092915050565b60008060008061245b8660000186612639565b915091508160001c8160001c8090509350935050509250929050565b600061248a846000018460001b846126d2565b60001c90509392505050565b60006124a4826000016127c8565b9050919050565b6124b68484846121eb565b6124c2848484846127d9565b612517576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612de46032913960400191505060405180910390fd5b50505050565b600061252f836000018360001b612afc565b905092915050565b505050565b600061254e836000018360001b612b1f565b905092915050565b6000612582846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612b8f565b90509392505050565b600081600001805490509050919050565b60006125ae836000018360001b612c6b565b905092915050565b600081836000018054905011612617576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612dc26022913960400191505060405180910390fd5b82600001828154811061262657fe5b9060005260206000200154905092915050565b6000808284600001805490501161269b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612f176022913960400191505060405180910390fd5b60008460000184815481106126ac57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612799576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561275e578082015181840152602081019050612743565b50505050905090810190601f16801561278b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106127ac57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006127fa8473ffffffffffffffffffffffffffffffffffffffff16612d53565b6128075760019050612af4565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b612832611e2d565b898888604051602401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128e25780820151818401526020810190506128c7565b50505050905090810190601f16801561290f5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106129a75780518252602082019150602081019050602083039250612984565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612a09576040519150601f19603f3d011682016040523d82523d6000602084013e612a0e565b606091505b509150915081612a7c57600081511115612a2b5780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180612de46032913960400191505060405180910390fd5b6000818060200190516020811015612a9357600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b600080836001016000848152602001908152602001600020541415905092915050565b6000612b2b8383612d9e565b612b84578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612b89565b600090505b92915050565b6000808460010160008581526020019081526020016000205490506000811415612c3657846000016040518060400160405280868152602001858152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550508460000180549050856001016000868152602001908152602001600020819055506001915050612c64565b82856000016001830381548110612c4957fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008083600101600084815260200190815260200160002054905060008114612d475760006001820390506000600186600001805490500390506000866000018281548110612cb657fe5b9060005260206000200154905080876000018481548110612cd357fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612d0b57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612d4d565b60009150505b92915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612d9557506000801b8214155b92505050919050565b60008083600101600084815260200190815260200160002054141590509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220d74df48334d01c4961dbb91c0fba25fd70ba417e3674f87a51a734300da4dbce64736f6c63430006040033",
  "sourceMap": "170:991:1:-:0;;;307:48;5:9:-1;2:2;;;27:1;24;17:12;2:2;307:48:1;3354:365:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:17:4;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;718:40:5;385:10;737:20;;718:18;;;:40;;:::i;:::-;3434:4:10;3426:5;:12;;;;;;;;;;;;:::i;:::-;;3458:6;3448:7;:16;;;;;;;;;;;;:::i;:::-;;3552:40;2632:10;3571:20;;3552:18;;;:40;;:::i;:::-;3602:49;2964:10;3621:29;;3602:18;;;:49;;:::i;:::-;3661:51;3337:10;3680:31;;3661:18;;;:51;;:::i;:::-;3354:365;;170:991:1;;735:104:3;788:15;822:10;815:17;;735:104;:::o;1449:198:5:-;1547:10;1532:25;;:11;:25;;;;;1524:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:4;1600:20;:33;1621:11;1600:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1449:198;:::o;170:991:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "170:991:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:140:5;;5:9:-1;2:2;;;27:1;24;17:12;2:2;915:140:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;915:140:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4625:90:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4625:90:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4625:90:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8519:209;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8519:209:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8519:209:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7853:381;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7853:381:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7853:381:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;361:185:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;361:185:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;361:185:1;;;;;;;;;;;;;;;;;:::i;:::-;;6733:200:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6733:200:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10230:300;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10230:300:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10230:300:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6428:152;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6428:152:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;6428:152:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;787:178:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;787:178:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;787:178:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11179:149:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;11179:149:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11179:149:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7271:161;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7271:161:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7271:161:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4353:167;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4353:167:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4353:167:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5967:87;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5967:87:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5967:87:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3923:211;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3923:211:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3923:211:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:145:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1656:145:4;;;:::i;:::-;;971:90:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;971:90:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1033:77:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1033:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4824:94:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4824:94:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4824:94:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9027:290;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9027:290:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9027:290:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12051:282;;5:9:-1;2:2;;;27:1;24;17:12;2:2;12051:282:10;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;12051:282:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;12051:282:10;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12051:282:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12051:282:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12051:282:10;;;;;;;;;;;;;;;:::i;:::-;;281:19:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;281:19:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;281:19:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5221:552:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5221:552:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5221:552:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5221:552:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:92:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1067:92:1;;;;;;;;;;;;;;;;;:::i;:::-;;9639:154:10;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9639:154:10;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9639:154:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1950:240:4;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1950:240:4;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1950:240:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;915:140:5;992:4;1015:20;:33;1036:11;1015:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:40;;915:140;;;:::o;4625:90:10:-;4671:13;4703:5;4696:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4625:90;:::o;8519:209::-;8587:7;8614:16;8622:7;8614;:16::i;:::-;8606:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8697:15;:24;8713:7;8697:24;;;;;;;;;;;;;;;;;;;;;8690:31;;8519:209;;;:::o;7853:381::-;7933:13;7949:16;7957:7;7949;:16::i;:::-;7933:32;;7989:5;7983:11;;:2;:11;;;;7975:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8067:5;8051:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;8076:37;8093:5;8100:12;:10;:12::i;:::-;8076:16;:37::i;:::-;8051:62;8043:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8206:21;8215:2;8219:7;8206:8;:21::i;:::-;7853:381;;;:::o;361:185:1:-;1247:12:4;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:5:1::1;433:19;;;;;;;;438:6;433:19;;;;446:5;433:19;;;;::::0;422:31:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;422:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:18;499:1;484:5;:12;;;;:16;463:37;;510:29;516:10;528;510:5;:29::i;:::-;1306:1:4;361:185:1::0;:::o;6733:200:10:-;6786:7;6905:21;:12;:19;:21::i;:::-;6898:28;;6733:200;:::o;10230:300::-;10389:41;10408:12;:10;:12::i;:::-;10422:7;10389:18;:41::i;:::-;10381:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10495:28;10505:4;10511:2;10515:7;10495:9;:28::i;:::-;10230:300;;;:::o;6428:152::-;6517:7;6543:30;6567:5;6543:13;:20;6557:5;6543:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6536:37;;6428:152;;;;:::o;787:178:1:-;887:7;896:4;865:3;616:5;:12;;;;607:6;:21;:36;;;;;642:1;632:6;:11;;607:36;599:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:5:::1;930:3;924:10;;;;;;;;;;;;;;;;;;:16;;;942:5;948:3;942:10;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;916:42;;;;787:178:::0;;;;:::o;11179:149:10:-;11282:39;11299:4;11305:2;11309:7;11282:39;;;;;;;;;;;;:16;:39::i;:::-;11179:149;;;:::o;7271:161::-;7338:7;7358:15;7379:22;7395:5;7379:12;:15;;:22;;;;:::i;:::-;7357:44;;;7418:7;7411:14;;;7271:161;;;:::o;4353:167::-;4417:7;4443:70;4460:7;4443:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4436:77;;4353:167;;;:::o;5967:87::-;6007:13;6039:8;6032:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5967:87;:::o;3923:211::-;3987:7;4031:1;4014:19;;:5;:19;;;;4006:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4098:29;:13;:20;4112:5;4098:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4091:36;;3923:211;;;:::o;1656:145:4:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;::::0;::::1;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;971:90:1:-;1016:7;1042:5;:12;;;;1035:19;;971:90;:::o;1033:77:4:-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;4824:94:10:-;4872:13;4904:7;4897:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4824:94;:::o;9027:290::-;9141:12;:10;:12::i;:::-;9129:24;;:8;:24;;;;9121:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9239:8;9194:18;:32;9213:12;:10;:12::i;:::-;9194:32;;;;;;;;;;;;;;;:42;9227:8;9194:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;9291:8;9262:48;;9277:12;:10;:12::i;:::-;9262:48;;;9301:8;9262:48;;;;;;;;;;;;;;;;;;;;;;9027:290;;:::o;12051:282::-;12182:41;12201:12;:10;:12::i;:::-;12215:7;12182:18;:41::i;:::-;12174:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12287:39;12301:4;12307:2;12311:7;12320:5;12287:13;:39::i;:::-;12051:282;;;;:::o;281:19:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5221:552:10:-;5286:13;5319:16;5327:7;5319;:16::i;:::-;5311:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5398:23;5424:10;:19;5435:7;5424:19;;;;;;;;;;;5398:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5578:1;5557:9;5551:23;:28;5547:220;;;5595:9;;;;;;;;;;;;;;;;;5547:220;5735:8;5745:9;5718:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5718:37:10;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5718:37:10;;;5704:52;;;5221:552;;;;:::o;1067:92:1:-;1115:3;735:5;741:3;735:10;;;;;;;;;;;;;;;;;;:15;;;;;;;;;;;;734:16;726:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:4:::1;1130:5;1136:3;1130:10;;;;;;;;;;;;;;;;;;:15;;;:22;;;;;;;;;;;;;;;;;;1067:92:::0;;:::o;9639:154:10:-;9728:4;9751:18;:25;9770:5;9751:25;;;;;;;;;;;;;;;:35;9777:8;9751:35;;;;;;;;;;;;;;;;;;;;;;;;;9744:42;;9639:154;;;;:::o;1950:240:4:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:1:::1;2038:22;;:8;:22;;;;2030:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:8;2118:38;;2139:6;::::0;::::1;;;;;;;;;2118:38;;;;;;;;;;;;2175:8;2166:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1950:240:::0;:::o;13502:117:10:-;13559:4;13582:30;13604:7;13582:12;:21;;:30;;;;:::i;:::-;13575:37;;13502:117;;;:::o;735:104:3:-;788:15;822:10;815:17;;735:104;:::o;20476:155:10:-;20568:2;20541:15;:24;20557:7;20541:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;20616:7;20612:2;20585:39;;20594:16;20602:7;20594;:16::i;:::-;20585:39;;;;;;;;;;;;20476:155;;:::o;16039:393::-;16132:1;16118:16;;:2;:16;;;;16110:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16190:16;16198:7;16190;:16::i;:::-;16189:17;16181:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16250:45;16279:1;16283:2;16287:7;16250:20;:45::i;:::-;16306:30;16328:7;16306:13;:17;16320:2;16306:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;16347:29;16364:7;16373:2;16347:12;:16;;:29;;;;;:::i;:::-;;16417:7;16413:2;16392:33;;16409:1;16392:33;;;;;;;;;;;;16039:393;;:::o;6284:121:16:-;6353:7;6379:19;6387:3;:10;;6379:7;:19::i;:::-;6372:26;;6284:121;;;:::o;13980:329:10:-;14065:4;14089:16;14097:7;14089;:16::i;:::-;14081:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14164:13;14180:16;14188:7;14180;:16::i;:::-;14164:32;;14225:5;14214:16;;:7;:16;;;:51;;;;14258:7;14234:31;;:20;14246:7;14234:11;:20::i;:::-;:31;;;14214:51;:87;;;;14269:32;14286:5;14293:7;14269:16;:32::i;:::-;14214:87;14206:96;;;13980:329;;;;:::o;17492:559::-;17609:4;17589:24;;:16;17597:7;17589;:16::i;:::-;:24;;;17581:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17691:1;17677:16;;:2;:16;;;;17669:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17745:39;17766:4;17772:2;17776:7;17745:20;:39::i;:::-;17846:29;17863:1;17867:7;17846:8;:29::i;:::-;17886:35;17913:7;17886:13;:19;17900:4;17886:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;17931:30;17953:7;17931:13;:17;17945:2;17931:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;17972:29;17989:7;17998:2;17972:12;:16;;:29;;;;;:::i;:::-;;18036:7;18032:2;18017:27;;18026:4;18017:27;;;;;;;;;;;;17492:559;;;:::o;7449:135:17:-;7520:7;7554:22;7558:3;:10;;7570:5;7554:3;:22::i;:::-;7546:31;;7539:38;;7449:135;;;;:::o;6733:224:16:-;6813:7;6822;6842:11;6855:13;6872:22;6876:3;:10;;6888:5;6872:3;:22::i;:::-;6841:53;;;;6920:3;6912:12;;6942:5;6934:14;;6904:46;;;;;;;;;6733:224;;;;;:::o;7376:202::-;7483:7;7525:44;7530:3;:10;;7550:3;7542:12;;7556;7525:4;:44::i;:::-;7517:53;;7502:69;;7376:202;;;;;:::o;7005:112:17:-;7065:7;7091:19;7099:3;:10;;7091:7;:19::i;:::-;7084:26;;7005:112;;;:::o;13038:269:10:-;13151:28;13161:4;13167:2;13171:7;13151:9;:28::i;:::-;13197:48;13220:4;13226:2;13230:7;13239:5;13197:22;:48::i;:::-;13189:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13038:269;;;;:::o;6052:149:16:-;6136:4;6159:35;6169:3;:10;;6189:3;6181:12;;6159:9;:35::i;:::-;6152:42;;6052:149;;;;:::o;21163:93:10:-;;;;:::o;6267:129:17:-;6334:4;6357:32;6362:3;:10;;6382:5;6374:14;;6357:4;:32::i;:::-;6350:39;;6267:129;;;;:::o;5500:174:16:-;5589:4;5612:55;5617:3;:10;;5637:3;5629:12;;5659:5;5651:14;;5643:23;;5612:4;:55::i;:::-;5605:62;;5500:174;;;;;:::o;3744:108::-;3800:7;3826:3;:12;;:19;;;;3819:26;;3744:108;;;:::o;6564:135:17:-;6634:4;6657:35;6665:3;:10;;6685:5;6677:14;;6657:7;:35::i;:::-;6650:42;;6564:135;;;;:::o;4223:201::-;4290:7;4338:5;4317:3;:11;;:18;;;;:26;4309:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4399:3;:11;;4411:5;4399:18;;;;;;;;;;;;;;;;4392:25;;4223:201;;;;:::o;4195:274:16:-;4262:7;4271;4320:5;4298:3;:12;;:19;;;;:27;4290:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:22;4400:3;:12;;4413:5;4400:19;;;;;;;;;;;;;;;;;;4375:44;;4437:5;:10;;;4449:5;:12;;;4429:33;;;;;4195:274;;;;;:::o;4876:315::-;4970:7;4989:16;5008:3;:12;;:17;5021:3;5008:17;;;;;;;;;;;;4989:36;;5055:1;5043:8;:13;;5058:12;5035:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5035:36:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5124:3;:12;;5148:1;5137:8;:12;5124:26;;;;;;;;;;;;;;;;;;:33;;;5117:40;;;4876:315;;;;;:::o;3784:107:17:-;3840:7;3866:3;:11;;:18;;;;3859:25;;3784:107;;;:::o;19420:1050:10:-;19540:4;19565:15;:2;:13;;;:15::i;:::-;19560:58;;19603:4;19596:11;;;;19560:58;19687:12;19701:23;19728:2;:7;;19772:45;;;19831:12;:10;:12::i;:::-;19857:4;19875:7;19896:5;19736:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;19736:175:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;19736:175:10;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;19736:175:10;19728:184;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;19728:184:10;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;19686:226:10;;;;19927:7;19922:542;;19974:1;19954:10;:17;:21;19950:376;;;20119:10;20113:17;20179:15;20166:10;20162:2;20158:19;20151:44;20068:145;20251:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19922:542;20356:13;20383:10;20372:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;20372:32:10;;;;;;;;;;;;;;;;20356:48;;970:10;20436:16;;20426:26;;;:6;:26;;;;20418:35;;;;;19420:1050;;;;;;;:::o;3531:123:16:-;3602:4;3646:1;3625:3;:12;;:17;3638:3;3625:17;;;;;;;;;;;;:22;;3618:29;;3531:123;;;;:::o;1411:404:17:-;1474:4;1495:21;1505:3;1510:5;1495:9;:21::i;:::-;1490:319;;1532:3;:11;;1549:5;1532:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1532:23:17;;;;;;;;;;;;;;;;;;;1712:3;:11;;:18;;;;1690:3;:12;;:19;1703:5;1690:19;;;;;;;;;;;:40;;;;1751:4;1744:11;;;;1490:319;1793:5;1786:12;;1411:404;;;;;:::o;1089:678:16:-;1165:4;1279:16;1298:3;:12;;:17;1311:3;1298:17;;;;;;;;;;;;1279:36;;1342:1;1330:8;:13;1326:435;;;1396:3;:12;;1414:38;;;;;;;;1431:3;1414:38;;;;1444:5;1414:38;;;1396:57;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1396:57:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1608:3;:12;;:19;;;;1588:3;:12;;:17;1601:3;1588:17;;;;;;;;;;;:39;;;;1648:4;1641:11;;;;;1326:435;1719:5;1683:3;:12;;1707:1;1696:8;:12;1683:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;1745:5;1738:12;;;1089:678;;;;;;:::o;1983:1512:17:-;2049:4;2165:18;2186:3;:12;;:19;2199:5;2186:19;;;;;;;;;;;;2165:40;;2234:1;2220:10;:15;2216:1273;;2577:21;2614:1;2601:10;:14;2577:38;;2629:17;2670:1;2649:3;:11;;:18;;;;:22;2629:42;;2911:17;2931:3;:11;;2943:9;2931:22;;;;;;;;;;;;;;;;2911:42;;3074:9;3045:3;:11;;3057:13;3045:26;;;;;;;;;;;;;;;:38;;;;3191:1;3175:13;:17;3149:3;:12;;:23;3162:9;3149:23;;;;;;;;;;;:43;;;;3298:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3390:3;:12;;:19;3403:5;3390:19;;;;;;;;;;;3383:26;;;3431:4;3424:11;;;;;;;;2216:1273;3473:5;3466:12;;;1983:1512;;;;;:::o;685:610:15:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;3576:127:17:-;3649:4;3695:1;3672:3;:12;;:19;3685:5;3672:19;;;;;;;;;;;;:24;;3665:31;;3576:127;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n\ncontract ItemToken is Ownable, ERC721 {\n    struct Item {\n        uint256 price;\n        bool sold;\n    }\n\n    Item[] public items;\n\n    constructor() public ERC721(\"ItemShop\", \"IS\") {}\n\n    function mintItem(uint256 _price) public onlyOwner {\n        items.push(Item(_price, false));\n        uint256 newTokenId = items.length - 1;\n        _mint(msg.sender, newTokenId);\n    }\n\n    modifier validItemId(uint256 itemId) {\n        require(itemId < items.length && itemId >= 0, \"Invalid item id\");\n        _;\n    }\n\n    modifier unsold(uint256 _id) {\n        require(!items[_id].sold, \"sold out\");\n        _;\n    }\n\n    function getItem(uint256 _id)\n        public\n        view\n        validItemId(_id)\n        returns (uint256, bool)\n    {\n        return (items[_id].price, items[_id].sold);\n    }\n\n    function getItemCount() public view returns (uint256) {\n        return items.length;\n    }\n\n    function buy(uint256 _id) public payable unsold(_id) {\n        items[_id].sold = true;\n    }\n}\n",
  "sourcePath": "/Users/tomoki/axelmark_kadai/item-shop/contracts/ItemToken.sol",
  "ast": {
    "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/contracts/ItemToken.sol",
    "exportedSymbols": {
      "ItemToken": [
        268
      ]
    },
    "id": 269,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 134,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 135,
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 442,
        "src": "25:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 136,
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 1799,
        "src": "94:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 137,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 441,
              "src": "192:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$441",
                "typeString": "contract Ownable"
              }
            },
            "id": 138,
            "nodeType": "InheritanceSpecifier",
            "src": "192:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 139,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1798,
              "src": "201:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1798",
                "typeString": "contract ERC721"
              }
            },
            "id": 140,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:1"
          }
        ],
        "contractDependencies": [
          332,
          441,
          497,
          509,
          1798,
          1906,
          1934,
          1958
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 268,
        "linearizedBaseContracts": [
          268,
          1798,
          1934,
          1958,
          1906,
          497,
          509,
          441,
          332
        ],
        "name": "ItemToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ItemToken.Item",
            "id": 145,
            "members": [
              {
                "constant": false,
                "id": 142,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 145,
                "src": "236:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "236:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 144,
                "name": "sold",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 145,
                "src": "259:9:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 143,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "259:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Item",
            "nodeType": "StructDefinition",
            "scope": 268,
            "src": "214:61:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfb231d2",
            "id": 148,
            "name": "items",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 268,
            "src": "281:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
              "typeString": "struct ItemToken.Item[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 146,
                "name": "Item",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 145,
                "src": "281:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Item_$145_storage_ptr",
                  "typeString": "struct ItemToken.Item"
                }
              },
              "id": 147,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "281:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage_ptr",
                "typeString": "struct ItemToken.Item[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "353:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4974656d53686f70",
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "335:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_093bcd12869d0d67701f6561fea25a30269c9397954bac2acc1e80521b58ab60",
                      "typeString": "literal_string \"ItemShop\""
                    },
                    "value": "ItemShop"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4953",
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "347:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a0f4911f5dff37b9a43a54645c34f34bf9127e9dac511b186b8529567dfaf3dc",
                      "typeString": "literal_string \"IS\""
                    },
                    "value": "IS"
                  }
                ],
                "id": 153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 150,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "328:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1798_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:1"
            },
            "scope": 268,
            "src": "307:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "412:134:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "438:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "446:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 166,
                          "name": "Item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "433:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Item_$145_storage_ptr_$",
                            "typeString": "type(struct ItemToken.Item storage pointer)"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "433:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$145_memory",
                          "typeString": "struct ItemToken.Item memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Item_$145_memory",
                          "typeString": "struct ItemToken.Item memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "items",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "422:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                          "typeString": "struct ItemToken.Item storage ref[] storage ref"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "422:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Item_$145_storage_$returns$__$",
                        "typeString": "function (struct ItemToken.Item storage ref)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "422:31:1"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 185,
                      "src": "463:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "items",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "484:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                          "typeString": "struct ItemToken.Item storage ref[] storage ref"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "484:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "499:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "484:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "463:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "516:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "516:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "528:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "510:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "510:29:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "17fb8594",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 160,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 390,
                  "src": "402:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "402:9:1"
              }
            ],
            "name": "mintItem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 186,
                  "src": "379:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "378:16:1"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:1"
            },
            "scope": 268,
            "src": "361:185:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "589:92:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "607:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "616:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                                "typeString": "struct ItemToken.Item storage ref[] storage ref"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "616:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "607:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "632:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "642:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "632:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "607:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206974656d206964",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "645:17:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_178cb0315391f7e048335a9574fc14bb6d02ff197a48d5b9178cda7dbff6db90",
                          "typeString": "literal_string \"Invalid item id\""
                        },
                        "value": "Invalid item id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_178cb0315391f7e048335a9574fc14bb6d02ff197a48d5b9178cda7dbff6db90",
                          "typeString": "literal_string \"Invalid item id\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "599:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "599:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "599:64:1"
                },
                {
                  "id": 202,
                  "nodeType": "PlaceholderStatement",
                  "src": "673:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "name": "validItemId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 204,
                  "src": "573:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "572:16:1"
            },
            "src": "552:129:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "716:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "734:16:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "735:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                                "typeString": "struct ItemToken.Item storage ref[] storage ref"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "741:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "735:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$145_storage",
                              "typeString": "struct ItemToken.Item storage ref"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "735:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c64206f7574",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "752:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9",
                          "typeString": "literal_string \"sold out\""
                        },
                        "value": "sold out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9",
                          "typeString": "literal_string \"sold out\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "726:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "726:37:1"
                },
                {
                  "id": 217,
                  "nodeType": "PlaceholderStatement",
                  "src": "773:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "name": "unsold",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "703:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:13:1"
            },
            "src": "687:94:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "906:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "924:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                              "typeString": "struct ItemToken.Item storage ref[] storage ref"
                            }
                          },
                          "id": 233,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "930:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "924:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Item_$145_storage",
                            "typeString": "struct ItemToken.Item storage ref"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 142,
                        "src": "924:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "942:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                              "typeString": "struct ItemToken.Item storage ref[] storage ref"
                            }
                          },
                          "id": 237,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "948:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "942:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Item_$145_storage",
                            "typeString": "struct ItemToken.Item storage ref"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 144,
                        "src": "942:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 239,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "923:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "916:42:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3129e773",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 224,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 221,
                    "src": "865:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 223,
                  "name": "validItemId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 204,
                  "src": "853:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "853:16:1"
              }
            ],
            "name": "getItem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "804:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:13:1"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "887:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "896:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:15:1"
            },
            "scope": 268,
            "src": "787:178:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "1025:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "items",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1042:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                        "typeString": "struct ItemToken.Item storage ref[] storage ref"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1042:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 246,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "1035:19:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7749cf23",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getItemCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "1016:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1015:9:1"
            },
            "scope": 268,
            "src": "971:90:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "1120:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "items",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1130:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                            "typeString": "struct ItemToken.Item storage ref[] storage ref"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "1136:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1130:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$145_storage",
                          "typeString": "struct ItemToken.Item storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "1130:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1148:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1130:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:22:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d96a094a",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 256,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 253,
                    "src": "1115:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "unsold",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 219,
                  "src": "1108:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1108:11:1"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "1080:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:13:1"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:1"
            },
            "scope": 268,
            "src": "1067:92:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 269,
        "src": "170:991:1"
      }
    ],
    "src": "0:1162:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/contracts/ItemToken.sol",
    "exportedSymbols": {
      "ItemToken": [
        268
      ]
    },
    "id": 269,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 134,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 135,
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 442,
        "src": "25:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tomoki/axelmark_kadai/item-shop/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 136,
        "nodeType": "ImportDirective",
        "scope": 269,
        "sourceUnit": 1799,
        "src": "94:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 137,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 441,
              "src": "192:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$441",
                "typeString": "contract Ownable"
              }
            },
            "id": 138,
            "nodeType": "InheritanceSpecifier",
            "src": "192:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 139,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1798,
              "src": "201:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1798",
                "typeString": "contract ERC721"
              }
            },
            "id": 140,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:1"
          }
        ],
        "contractDependencies": [
          332,
          441,
          497,
          509,
          1798,
          1906,
          1934,
          1958
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 268,
        "linearizedBaseContracts": [
          268,
          1798,
          1934,
          1958,
          1906,
          497,
          509,
          441,
          332
        ],
        "name": "ItemToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ItemToken.Item",
            "id": 145,
            "members": [
              {
                "constant": false,
                "id": 142,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 145,
                "src": "236:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 141,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "236:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 144,
                "name": "sold",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 145,
                "src": "259:9:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 143,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "259:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Item",
            "nodeType": "StructDefinition",
            "scope": 268,
            "src": "214:61:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfb231d2",
            "id": 148,
            "name": "items",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 268,
            "src": "281:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
              "typeString": "struct ItemToken.Item[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 146,
                "name": "Item",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 145,
                "src": "281:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Item_$145_storage_ptr",
                  "typeString": "struct ItemToken.Item"
                }
              },
              "id": 147,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "281:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage_ptr",
                "typeString": "struct ItemToken.Item[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "353:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4974656d53686f70",
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "335:10:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_093bcd12869d0d67701f6561fea25a30269c9397954bac2acc1e80521b58ab60",
                      "typeString": "literal_string \"ItemShop\""
                    },
                    "value": "ItemShop"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4953",
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "347:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a0f4911f5dff37b9a43a54645c34f34bf9127e9dac511b186b8529567dfaf3dc",
                      "typeString": "literal_string \"IS\""
                    },
                    "value": "IS"
                  }
                ],
                "id": 153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 150,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1798,
                  "src": "328:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1798_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "328:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:1"
            },
            "scope": 268,
            "src": "307:48:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "412:134:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "438:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "446:5:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 166,
                          "name": "Item",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "433:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Item_$145_storage_ptr_$",
                            "typeString": "type(struct ItemToken.Item storage pointer)"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "433:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$145_memory",
                          "typeString": "struct ItemToken.Item memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Item_$145_memory",
                          "typeString": "struct ItemToken.Item memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "items",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "422:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                          "typeString": "struct ItemToken.Item storage ref[] storage ref"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "422:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Item_$145_storage_$returns$__$",
                        "typeString": "function (struct ItemToken.Item storage ref)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "422:31:1"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 185,
                      "src": "463:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "463:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "items",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "484:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                          "typeString": "struct ItemToken.Item storage ref[] storage ref"
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "484:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "499:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "484:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "463:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "516:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "516:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 182,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "528:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1516,
                      "src": "510:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "510:29:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "17fb8594",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 160,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 390,
                  "src": "402:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "402:9:1"
              }
            ],
            "name": "mintItem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 186,
                  "src": "379:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "378:16:1"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:1"
            },
            "scope": 268,
            "src": "361:185:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "589:92:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "607:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "616:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                                "typeString": "struct ItemToken.Item storage ref[] storage ref"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "616:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "607:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 195,
                            "name": "itemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "632:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "642:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "632:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "607:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206974656d206964",
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "645:17:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_178cb0315391f7e048335a9574fc14bb6d02ff197a48d5b9178cda7dbff6db90",
                          "typeString": "literal_string \"Invalid item id\""
                        },
                        "value": "Invalid item id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_178cb0315391f7e048335a9574fc14bb6d02ff197a48d5b9178cda7dbff6db90",
                          "typeString": "literal_string \"Invalid item id\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "599:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "599:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "599:64:1"
                },
                {
                  "id": 202,
                  "nodeType": "PlaceholderStatement",
                  "src": "673:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "name": "validItemId",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "name": "itemId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 204,
                  "src": "573:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "572:16:1"
            },
            "src": "552:129:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "716:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "734:16:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "items",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "735:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                                "typeString": "struct ItemToken.Item storage ref[] storage ref"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "741:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "735:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Item_$145_storage",
                              "typeString": "struct ItemToken.Item storage ref"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sold",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 144,
                          "src": "735:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c64206f7574",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "752:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9",
                          "typeString": "literal_string \"sold out\""
                        },
                        "value": "sold out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58636662b1fc14e257f44145653c04caa94522b84e511b2cf0d7859a8247c1d9",
                          "typeString": "literal_string \"sold out\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "726:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "726:37:1"
                },
                {
                  "id": 217,
                  "nodeType": "PlaceholderStatement",
                  "src": "773:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "name": "unsold",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 219,
                  "src": "703:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:13:1"
            },
            "src": "687:94:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "906:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "924:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                              "typeString": "struct ItemToken.Item storage ref[] storage ref"
                            }
                          },
                          "id": 233,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 232,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "930:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "924:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Item_$145_storage",
                            "typeString": "struct ItemToken.Item storage ref"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 142,
                        "src": "924:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "items",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 148,
                            "src": "942:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                              "typeString": "struct ItemToken.Item storage ref[] storage ref"
                            }
                          },
                          "id": 237,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "948:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "942:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Item_$145_storage",
                            "typeString": "struct ItemToken.Item storage ref"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 144,
                        "src": "942:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 239,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "923:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "916:42:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3129e773",
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 224,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 221,
                    "src": "865:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 223,
                  "name": "validItemId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 204,
                  "src": "853:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "853:16:1"
              }
            ],
            "name": "getItem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "804:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "803:13:1"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "887:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 242,
                  "src": "896:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:15:1"
            },
            "scope": 268,
            "src": "787:178:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "1025:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 247,
                      "name": "items",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "1042:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                        "typeString": "struct ItemToken.Item storage ref[] storage ref"
                      }
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1042:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 246,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "1035:19:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7749cf23",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getItemCount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "992:2:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 251,
                  "src": "1016:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1015:9:1"
            },
            "scope": 268,
            "src": "971:90:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "1120:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "items",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1130:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Item_$145_storage_$dyn_storage",
                            "typeString": "struct ItemToken.Item storage ref[] storage ref"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "1136:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1130:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Item_$145_storage",
                          "typeString": "struct ItemToken.Item storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "1130:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1148:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1130:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:22:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d96a094a",
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 256,
                    "name": "_id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 253,
                    "src": "1115:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "unsold",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 219,
                  "src": "1108:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1108:11:1"
              }
            ],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "1080:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:13:1"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:1"
            },
            "scope": 268,
            "src": "1067:92:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 269,
        "src": "170:991:1"
      }
    ],
    "src": "0:1162:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xe6A78BFCa33fc04b18dd4B7b3EcE9F79D53922d1",
      "transactionHash": "0xe527dec7cbf9e6185d418d4b520a94c0acc562e65a957fdc439ac8bdbb2205b8"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf4d3A175ff3C8DC76f2ee7e8Ca2C2f41e124D49F",
      "transactionHash": "0xfab298a758aeb443d355767bf06a44369341285988cf1a59c8ce90d61badbf83"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-14T05:47:55.923Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}